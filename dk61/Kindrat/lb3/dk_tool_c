#include "dk_tool_h"

#include <stdio.h>
#include <time.h>
#include <string.h>

void bubbleSort(char *str, int lenght)
	{
		for (int N = lenght-1; N > 0; N --)
		{		
			int Y;
				for (int Y = 0; Y < N; Y ++)
				{			
					if (str[Y] < str[Y + 1])
					{	
					char theTmp = str[Y];
					str[Y] = str[Y + 1];
					str[Y + 1] = theTmp;
					}
				}
		}
	}
	
void selectionSort(char *str, int lenght)
{
	int N;	
	for (N = 0; N < lenght - 1; N ++)
	{
		int theMinIndex = N;
		int Y;	
		for (Y = N + 1;Y < lenght; Y ++)
		{
			if (str[Y]>str[theMinIndex])
			{				
				theMinIndex = Y;
			}
		}
		
		char theTmp = str[N];
		str[N] = str[theMinIndex];
		str[theMinIndex] = theTmp;
	}
}

void insertionSort(char *str, int lenght)
{
	int N;
	for (N = 1; N < lenght; N ++)
	{
		char theTmp = str[N];
		int Y = N;
		while (Y > 0 && (str[Y-1] >= theTmp))
		{
			str[Y] = str[Y - 1];
		}	
			str[Y] = theTmp;
	}
}

void ShellSort(char *str, int lenght)
{
	int Fzn = 0;
	int Szn = 0;
	int sh = 1; 
	
	
	while (sh <= lenght/3)
	{
		sh = sh*3 + 1; 
	}


	while (sh > 0)
	{
		for (theOuter = sh; Szn < lenght; Szn ++)
		{
			int theTmp = str[Szn];
			Fzn = Szn;
		

			while (Fzn > sh-1 && str[Fzn - sh] >= theTmp) 
			{
				str[Fzn] = str[Fzn - sh];
				Fzn -= sh;
			}
		
			str[Fzn] = theTmp;
		}
	
		sh = (sh - 1) / 3; 
	}
}

int LineSearch(FILE *file2, char key, char *str, int lenght)
{
	printf("\n kakoi symvol nado naity : ");
	scanf("%c", &key);
	printf("\n iskomi simvol : %c\n", key );
	fprintf(file2, "\n iskomi simvol : %c\n", key);
	int count;
	
	for (int i = 0; i < lenght; i++)
	{
		if (str[i] == key)
		{
		printf("[%i] ", i);
		fprintf(file2, "[%i] ", i);
		count++;
		}
	}
	
	if (symbol_count > 0)
	{
		printf("vsego naideno %i symvolov\n", count);
		fprintf(file2, "vsego naideno %i symvolov\n", count);	
	}
	else
	{
		printf("  takih simvolov netu \n");
		fprintf(file2,"  takih simvolov netu  \n");
	}
}

